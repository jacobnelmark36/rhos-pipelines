apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: pipeline-demo
spec:
  workspaces:
  - name: shared-workspace
  params:
  - name: app-git-url
    type: string
    description: url of the app git repo for the code of deployment
    default: https://github.com/jacobnelmark36/guide-openshift-local-crc.git
  - name: app-git-revision
    type: string
    description: revision to be used from repo of the app code for deployment
    default: dev2
  - name: helm-git-url
    type: string
    description: url of the helm chart git repo for the code of deployment
    default: https://github.com/jacobnelmark36/system-chart.git
  - name: helm-git-revision
    type: string
    description: revision to be used from repo of the helm chart for deployment
    default: main
  - name: app-name
    type: string
    description: name of app to be deployed
    default: system-app
  - name: app-readme-path
    type: string
    description: path to Readme.md in repo
    default: workspace/repo/system/Readme.md
  - name: helm-readme-path
    type: string
    description: path to Readme.md in repo
    default: workspace/repo/helm/README.md
  - name: IMAGE
    type: string
    description: Fully qualified container image name to be built by Buildah.
    default: image-registry.openshift-image-registry.svc:5000/pipeline-demo/system:1.1-SNAPSHOT
  - name: DOCKERFILE
    type: string
    description: Path to the Dockerfile (or Containerfile) relative to the source workspace.
    default: system/Dockerfile
  - name: CONTEXT
    type: string
    description: Path to the directory to use as the context.
    default: system/.
  - name: charts_dir
    type: string
    description: The directory relative to the source workspace that contains the helm chart
    default: helm/system-chart
  - name: release_version
    type: string
    description: The helm release version in semantic versioning format
    default: v0.0.1
  - name: release_namespace
    type: string
    description: The helm release namespace
    default: pipeline-demo
  - name: values_file
    type: string
    description: The values file to be used relative to the source workspace
    default: helm/helm-deploy-values.yaml
  tasks:
  - name: clone-app-repo
    taskRef:
      resolver: git
      params:
      - name: url
        value: https://github.com/jacobnelmark36/rhos-pipelines.git
      - name: revision
        value: main
      - name: pathInRepo
        value: ci/tasks/git-clone.yaml
    workspaces:
    - name: repo
      workspace: shared-workspace
    params:
    - name: url
      value: $(params.app-git-url)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.app-git-revision)
  - name: clone-helm-repo
    taskRef:
      resolver: git
      params:
      - name: url
        value: https://github.com/jacobnelmark36/rhos-pipelines.git
      - name: revision
        value: main
      - name: pathInRepo
        value: ci/tasks/git-clone.yaml
    workspaces:
    - name: repo
      workspace: shared-workspace
    params:
    - name: url
      value: $(params.helm-git-url)
    - name: subdirectory
      value: "helm"
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.helm-git-revision)
  - name: echo-app-readme
    workspaces:
    - name: repo
      workspace: shared-workspace
    params:
    - name: appName
      value: $(params.app-name)
    - name: filePath
      value: $(params.app-readme-path)
    runAfter:
    - clone-app-repo
    taskSpec:
      params:
      - name: appName
        type: string
      - name: filePath
        type: string
      steps:
      - image: ubuntu
        script: |
          #!/bin/bash
          ls -la
          cat $(params.filePath)
          echo "name of app: $(params.appName)"
  - name: echo-helm-readme
    workspaces:
    - name: repo
      workspace: shared-workspace
    params:
    - name: appName
      value: $(params.app-name)
    - name: filePath
      value: $(params.helm-readme-path)
    runAfter:
    - clone-helm-repo
    taskSpec:
      params:
      - name: appName
        type: string
      - name: filePath
        type: string
      steps:
      - image: ubuntu
        script: |
          #!/bin/bash
          ls -la
          cat $(params.filePath)
          echo "name of app: $(params.appName)"
  - name: build-push-image
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: buildah
      - name: namespace
        value: openshift-pipelines
    runAfter:
    - echo-app-readme
    - echo-helm-readme
    params:
    - name: IMAGE
      value: $(params.IMAGE)
    - name: DOCKERFILE
      value: $(params.DOCKERFILE)
    - name: CONTEXT
      value: $(params.CONTEXT)
    workspaces:
    - name: source
      workspace: shared-workspace
  - name: helm-upgrade
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: helm-upgrade-from-source
      - name: namespace
        value: openshift-pipelines
    runAfter:
    - build-push-image
    params:
    - name: release_name
      value: $(params.app-name)
    - name: release_version
      value: $(params.release_version)
    - name: charts_dir
      value: $(params.charts_dir)
    - name: values_file
      value: $(params.values_file)
    - name: release_namespace
      value: $(params.release_namespace)
    workspaces:
    - name: source
      workspace: shared-workspace